{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\\\uC5F0\\uC2B5\\uC7A5\\\\react_practice\\\\boot\\\\src\\\\dashboard\\\\recent_practice.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport 'owl.carousel/dist/assets/owl.carousel.css';\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\nimport $ from 'jquery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecentPractice = () => {\n  _s();\n  useEffect(() => {\n    const updateItemsToShow = () => {\n      const windowWidth = window.innerWidth;\n      let itemsToShow = 3; // 아이템의 기본 개수\n\n      if (windowWidth <= 600) {\n        itemsToShow = 1;\n      } else if (windowWidth <= 900) {\n        itemsToShow = 3;\n      } else {\n        itemsToShow = 5;\n      }\n      $('.owl-carousel').owlCarousel({\n        loop: true,\n        margin: 10,\n        items: itemsToShow\n      });\n    };\n    updateItemsToShow();\n\n    // 창 크기가 변경될 때마다 아이템 업데이트\n    window.addEventListener('resize', updateItemsToShow);\n\n    // 컴포넌트가 언마운트될 때 owl.carousel 제거\n    return () => {\n      window.removeEventListener('resize', updateItemsToShow);\n      $('.owl-carousel').owlCarousel('destroy');\n    };\n  }, []);\n  const imgs = ['img/ppt1.jpg', 'img/ppt2.png', 'img/ppt3.png', 'img/ppt4.jpg'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid pt-4 px-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-100 bg-light rounded p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"mb-0\",\n        children: \"\\uCD5C\\uADFC \\uC5F0\\uC2B5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"owl-carousel\",\n        children: imgs.map((path, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scroll-time-recent\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-link\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: path,\n              className: \"d-block mx-auto\",\n              alt: `이미지 ${index + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 19\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n\n  // const getContainerStyle =()=>({\n  //     overflowX: 'auto',\n  //     whiteSpace: 'nowrap'\n  // });\n\n  // const getItemStyle=()=>({\n  //     display: 'inline-block',\n  // });\n\n  // const imgs = [\n  //     'img/ppt1.jpg',\n  //     'img/ppt2.png',\n  //     'img/ppt3.png',\n  //     'img/ppt4.jpg',\n  // ];\n\n  // return(\n  //     <>\n  //     <div class=\"container-fluid pt-4 px-4\"> \n  //         <div class=\"h-100 bg-light rounded p-4\">\n  //             <h6 class=\"mb-0\">최근 연습</h6>\n  //             <div class=\"scroll-container\" style={getContainerStyle()}>\n  //                 {imgs.map((path, index) => (\n  //                     <div key={index} class=\"scroll-time-recent\" style={getItemStyle()}>\n  //                         <button class='btn btn-link'>\n  //                             <img src={path} class=\"d-block mx-auto\" alt={`이미지 ${index + 1}`} />\n  //                         </button>\n  //                     </div>\n  //                 ))}\n  //             </div>\n  //         </div>\n  //     </div>\n  //     </>\n  // );\n};\n_s(RecentPractice, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = RecentPractice;\nexport default RecentPractice;\nvar _c;\n$RefreshReg$(_c, \"RecentPractice\");","map":{"version":3,"names":["React","useEffect","$","jsxDEV","_jsxDEV","RecentPractice","_s","updateItemsToShow","windowWidth","window","innerWidth","itemsToShow","owlCarousel","loop","margin","items","addEventListener","removeEventListener","imgs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","path","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/연습장/react_practice/boot/src/dashboard/recent_practice.js"],"sourcesContent":["import React, {useEffect} from \"react\";\r\nimport 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\nimport $ from 'jquery';\r\n\r\nconst RecentPractice =()=>{\r\n\r\n    useEffect(() => {\r\n        const updateItemsToShow = () => {\r\n          const windowWidth = window.innerWidth;\r\n          let itemsToShow = 3; // 아이템의 기본 개수\r\n    \r\n          if (windowWidth <= 600) {\r\n            itemsToShow = 1;\r\n          } else if (windowWidth <= 900) {\r\n            itemsToShow = 3;\r\n          } else {\r\n            itemsToShow = 5;\r\n          }\r\n    \r\n          $('.owl-carousel').owlCarousel({\r\n            loop: true,\r\n            margin: 10,\r\n            items: itemsToShow,\r\n          });\r\n        };\r\n    \r\n        updateItemsToShow();\r\n    \r\n        // 창 크기가 변경될 때마다 아이템 업데이트\r\n        window.addEventListener('resize', updateItemsToShow);\r\n    \r\n        // 컴포넌트가 언마운트될 때 owl.carousel 제거\r\n        return () => {\r\n          window.removeEventListener('resize', updateItemsToShow);\r\n          $('.owl-carousel').owlCarousel('destroy');\r\n        };\r\n      }, []);\r\n    \r\n      const imgs = [\r\n        'img/ppt1.jpg',\r\n        'img/ppt2.png',\r\n        'img/ppt3.png',\r\n        'img/ppt4.jpg',\r\n      ];\r\n    \r\n      return (\r\n        <div className=\"container-fluid pt-4 px-4\">\r\n          <div className=\"h-100 bg-light rounded p-4\">\r\n            <h6 className=\"mb-0\">최근 연습</h6>\r\n            <div className=\"owl-carousel\">\r\n              {imgs.map((path, index) => (\r\n                <div key={index} className=\"scroll-time-recent\">\r\n                  <button className='btn btn-link'>\r\n                    <img src={path} className=\"d-block mx-auto\" alt={`이미지 ${index + 1}`} />\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n\r\n    // const getContainerStyle =()=>({\r\n    //     overflowX: 'auto',\r\n    //     whiteSpace: 'nowrap'\r\n    // });\r\n\r\n    // const getItemStyle=()=>({\r\n    //     display: 'inline-block',\r\n    // });\r\n\r\n    // const imgs = [\r\n    //     'img/ppt1.jpg',\r\n    //     'img/ppt2.png',\r\n    //     'img/ppt3.png',\r\n    //     'img/ppt4.jpg',\r\n    // ];\r\n\r\n    // return(\r\n    //     <>\r\n    //     <div class=\"container-fluid pt-4 px-4\"> \r\n    //         <div class=\"h-100 bg-light rounded p-4\">\r\n    //             <h6 class=\"mb-0\">최근 연습</h6>\r\n    //             <div class=\"scroll-container\" style={getContainerStyle()}>\r\n    //                 {imgs.map((path, index) => (\r\n    //                     <div key={index} class=\"scroll-time-recent\" style={getItemStyle()}>\r\n    //                         <button class='btn btn-link'>\r\n    //                             <img src={path} class=\"d-block mx-auto\" alt={`이미지 ${index + 1}`} />\r\n    //                         </button>\r\n    //                     </div>\r\n    //                 ))}\r\n    //             </div>\r\n    //         </div>\r\n    //     </div>\r\n    //     </>\r\n    // );\r\n};\r\n\r\nexport default RecentPractice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}