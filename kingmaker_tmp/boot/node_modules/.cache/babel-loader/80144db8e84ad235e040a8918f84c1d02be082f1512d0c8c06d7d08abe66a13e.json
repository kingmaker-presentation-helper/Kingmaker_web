{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\github\\\\Kingmaker_web\\\\kingmaker_tmp\\\\boot\\\\src\\\\pages\\\\MainPage\\\\component\\\\recent_practice.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RecentPractice = () => {\n  const getContainerStyle = () => ({\n    // overflowX: 'auto',\n    // whiteSpace: 'nowrap'\n  });\n  const getItemStyle = () => ({\n    // display: 'inline-block',\n  });\n  const imgs = ['img/ppt1.jpg', 'img/ppt2.png', 'img/ppt3.png', 'img/ppt4.jpg'];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"carousel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"carouselBox\",\n        children: imgs.map((path, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"\",\n          style: getItemStyle(),\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-link\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: path,\n              class: \"d-block\",\n              alt: `이미지 ${index + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = RecentPractice;\nexport default RecentPractice;\nvar _c;\n$RefreshReg$(_c, \"RecentPractice\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","RecentPractice","getContainerStyle","getItemStyle","imgs","children","class","map","path","index","style","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/github/Kingmaker_web/kingmaker_tmp/boot/src/pages/MainPage/component/recent_practice.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst RecentPractice =()=>{\r\n\r\n    const getContainerStyle =()=>({\r\n        // overflowX: 'auto',\r\n        // whiteSpace: 'nowrap'\r\n    });\r\n\r\n    const getItemStyle=()=>({\r\n        // display: 'inline-block',\r\n    });\r\n\r\n    const imgs = [\r\n        'img/ppt1.jpg',\r\n        'img/ppt2.png',\r\n        'img/ppt3.png',\r\n        'img/ppt4.jpg',\r\n    ];\r\n\r\n    return(\r\n        <>\r\n        <div class='carousel'>\r\n            <div class='carouselBox'>\r\n            {imgs.map((path, index) => (\r\n                <div key={index} class=\"\" style={getItemStyle()}>\r\n                    <button class='btn btn-link'>\r\n                        <img src={path} class=\"d-block\" alt={`이미지 ${index + 1}`} />\r\n                    </button>\r\n                </div>\r\n            ))}\r\n            </div>\r\n        </div>\r\n        {/* <div class=\"container pt-4 px-4 m-0\"> \r\n            <div class=\"container-fluid bg-light rounded p-4\">\r\n                <h6 class=\"mb-0\">최근 연습</h6>\r\n                <div class=\"d-flex overflow-auto\" style={getContainerStyle()}>\r\n                    {imgs.map((path, index) => (\r\n                        <div key={index} class=\"\" style={getItemStyle()}>\r\n                            <button class='btn btn-link'>\r\n                                <img src={path} class=\"d-block\" alt={`이미지 ${index + 1}`} />\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RecentPractice;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,cAAc,GAAEA,CAAA,KAAI;EAEtB,MAAMC,iBAAiB,GAAEA,CAAA,MAAK;IAC1B;IACA;EAAA,CACH,CAAC;EAEF,MAAMC,YAAY,GAACA,CAAA,MAAK;IACpB;EAAA,CACH,CAAC;EAEF,MAAMC,IAAI,GAAG,CACT,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,CACjB;EAED,oBACIN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACAP,OAAA;MAAKQ,KAAK,EAAC,UAAU;MAAAD,QAAA,eACjBP,OAAA;QAAKQ,KAAK,EAAC,aAAa;QAAAD,QAAA,EACvBD,IAAI,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAClBX,OAAA;UAAiBQ,KAAK,EAAC,EAAE;UAACI,KAAK,EAAEP,YAAY,CAAC,CAAE;UAAAE,QAAA,eAC5CP,OAAA;YAAQQ,KAAK,EAAC,cAAc;YAAAD,QAAA,eACxBP,OAAA;cAAKa,GAAG,EAAEH,IAAK;cAACF,KAAK,EAAC,SAAS;cAACM,GAAG,EAAG,OAAMH,KAAK,GAAG,CAAE;YAAE;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvD;QAAC,GAHHP,KAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBAeJ,CAAC;AAEX,CAAC;AAACC,EAAA,GA/CIhB,cAAc;AAiDpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}