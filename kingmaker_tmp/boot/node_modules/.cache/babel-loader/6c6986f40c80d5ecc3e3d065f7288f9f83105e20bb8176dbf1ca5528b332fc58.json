{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\github\\\\Kingmaker_web\\\\kingmaker_tmp\\\\boot\\\\src\\\\pages\\\\MainPage\\\\component\\\\recent_practice.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RecentPractice = () => {\n  _s();\n  const getContainerStyle = () => ({\n    // overflowX: 'auto',\n    // whiteSpace: 'nowrap'\n  });\n  const getItemStyle = () => ({\n    // display: 'inline-block',\n  });\n  const imgs = ['img/ppt1.jpg', 'img/ppt2.png', 'img/ppt3.png', 'img/ppt4.jpg'];\n  const [item, setItem] = useState([{\n    id: 1,\n    url: 'img/ppt1.jpg'\n  }, {\n    id: 2,\n    url: 'img/ppt2.jpg'\n  }, {\n    id: 3,\n    url: 'img/ppt3.jpg'\n  }, {\n    id: 4,\n    url: 'img/ppt4.jpg'\n  }]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const fakeData = 2;\n  const setSliders = () => {\n    const addedFront = [];\n    const addedLast = [];\n    let index = 0;\n    while (index < fakeData) {\n      addedLast.push(item[index % item.length]);\n      addedFront.unshift(item[item.length - 1 - index % item.length]);\n      index++;\n    }\n    return [...addedFront, ...item, ...addedLast];\n  };\n  const handlerSlide = index => {\n    if (index < 0) {\n      direction.current = 'left';\n      index = slides.length - 1;\n      setOffTransition(true);\n    } else if (index === slides.length - 1) {\n      direction.current = 'right';\n      index = slides.length - 1;\n    }\n    setCurrentIndex(index);\n  };\n  const handleSwipe = direction => {\n    handlerSlide(currentIndex + direction);\n  };\n  const slides = setSliders();\n  const [offTransition, setOffTransition] = useState(false);\n  const direction = useRef('left');\n  const transition = offTransition ? '0s' : '1s';\n  const [disabled, setDisabled] = useState(false);\n  const buttonControll = () => {\n    setDisabled(true);\n    setTimeout(() => setDisabled(false), 1000);\n  };\n  useEffect(() => {\n    if (direction.current === 'right' && currentIndex === slides.length - 1) {\n      setTimeout(() => {\n        setOffTransition(true);\n        setCurrentIndex(0);\n      }, 1000);\n    } else if (direction.current === 'left' && currentIndex === slides.length - 1) {\n      setTimeout(() => {\n        setOffTransition(false);\n        setCurrentIndex(slides.length - 2);\n      }, [10]);\n    }\n  }, [currentIndex]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"project\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: disabled,\n        onClick: () => {\n          handleSwipe(-1);\n          buttonControll();\n        },\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(RecentPractice, \"ygeuFEVjYbzQ0JQsUi8mucoEB6E=\");\n_c = RecentPractice;\nexport default RecentPractice;\nvar _c;\n$RefreshReg$(_c, \"RecentPractice\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","RecentPractice","_s","getContainerStyle","getItemStyle","imgs","item","setItem","id","url","currentIndex","setCurrentIndex","fakeData","setSliders","addedFront","addedLast","index","push","length","unshift","handlerSlide","direction","current","slides","setOffTransition","handleSwipe","offTransition","transition","disabled","setDisabled","buttonControll","setTimeout","children","class","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/github/Kingmaker_web/kingmaker_tmp/boot/src/pages/MainPage/component/recent_practice.js"],"sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\n\r\nconst RecentPractice =()=>{\r\n\r\n    const getContainerStyle =()=>({\r\n        // overflowX: 'auto',\r\n        // whiteSpace: 'nowrap'\r\n    });\r\n\r\n    const getItemStyle=()=>({\r\n        // display: 'inline-block',\r\n    });\r\n\r\n    const imgs = [\r\n        'img/ppt1.jpg',\r\n        'img/ppt2.png',\r\n        'img/ppt3.png',\r\n        'img/ppt4.jpg',\r\n    ];\r\n\r\n    const [item, setItem] = useState([\r\n        {\r\n            id: 1,\r\n            url: 'img/ppt1.jpg'\r\n        },\r\n        {\r\n            id: 2,\r\n            url: 'img/ppt2.jpg'\r\n        },\r\n        {\r\n            id: 3,\r\n            url: 'img/ppt3.jpg'\r\n        },\r\n        {\r\n            id: 4,\r\n            url: 'img/ppt4.jpg'\r\n        }\r\n    ]);\r\n\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const fakeData = 2;\r\n    const setSliders=()=>{\r\n        const addedFront = [];\r\n        const addedLast = [];\r\n        let index = 0;\r\n        while (index < fakeData) {\r\n            addedLast.push(item[index % item.length]);\r\n            addedFront.unshift(item[item.length - 1 - (index % item.length)]);\r\n            index++;\r\n        }\r\n\r\n        return [...addedFront, ...item, ...addedLast];\r\n    };\r\n\r\n    const handlerSlide = index =>{\r\n        if (index < 0) {\r\n            direction.current = 'left';\r\n            index = slides.length - 1;\r\n            setOffTransition(true);\r\n        } else if(index === slides.length - 1) {\r\n            direction.current = 'right';\r\n            index = slides.length - 1;\r\n        }\r\n        setCurrentIndex(index);\r\n    }\r\n\r\n    const handleSwipe = direction =>{\r\n        handlerSlide(currentIndex + direction);\r\n    };\r\n\r\n    const slides = setSliders();\r\n    const [offTransition, setOffTransition] = useState(false);\r\n    const direction = useRef('left');\r\n    const transition = offTransition ? '0s' : '1s';\r\n    const [disabled, setDisabled] = useState(false);\r\n    const buttonControll = () =>{\r\n        setDisabled(true);\r\n        setTimeout(()=> setDisabled(false), 1000);\r\n    };\r\n\r\n    useEffect(()=> {\r\n        if (\r\n            direction.current === 'right' &&\r\n            currentIndex === slides.length - 1\r\n        ) {\r\n            setTimeout(()=> {\r\n                setOffTransition(true);\r\n                setCurrentIndex(0);\r\n            }, 1000);\r\n        }\r\n        else if (\r\n            direction.current === 'left' &&\r\n            currentIndex === slides.length - 1\r\n        ) {\r\n            setTimeout(()=>{\r\n                setOffTransition(false);\r\n                setCurrentIndex(slides.length-2);\r\n            }, [10]);\r\n        }\r\n    }, [currentIndex]);\r\n\r\n    return(\r\n        <>\r\n        <div class='project'>\r\n            <button\r\n                disabled={disabled}\r\n                onClick={()=>{\r\n                    handleSwipe(-1);\r\n                    buttonControll();\r\n                }}>&lt;\r\n            </button>\r\n        </div>\r\n        {/* <div class=\"container pt-4 px-4 m-0\"> \r\n            <div class=\"container-fluid bg-light rounded p-4\">\r\n                <h6 class=\"mb-0\">최근 연습</h6>\r\n                <div class=\"d-flex overflow-auto\" style={getContainerStyle()}>\r\n                    {imgs.map((path, index) => (\r\n                        <div key={index} class=\"\" style={getItemStyle()}>\r\n                            <button class='btn btn-link'>\r\n                                <img src={path} class=\"d-block\" alt={`이미지 ${index + 1}`} />\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RecentPractice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}