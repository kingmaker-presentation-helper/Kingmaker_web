{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\github\\\\Kingmaker_web\\\\kingmaker_tmp\\\\boot\\\\src\\\\pages\\\\MainPage\\\\component\\\\recent_practice.js\";\nimport React from \"react\";\nimport { Container, Row, Col } from 'react-bootstrap';\nimport './scroll.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RecentPractice = () => {\n  const getContainerStyle = () => ({\n    // overflowX: 'auto',\n    // whiteSpace: 'nowrap'\n  });\n  const getItemStyle = () => ({\n    // display: 'inline-block',\n  });\n  const imgs = ['img/ppt1.jpg', 'img/ppt2.png', 'img/ppt3.png', 'img/ppt4.jpg'];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"image-container\",\n        children: imgs.map((path, index) => /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: path,\n            alt: `Image ${index + 1}`,\n            class: \"img-fluid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n};\n_c = RecentPractice;\nexport default RecentPractice;\nvar _c;\n$RefreshReg$(_c, \"RecentPractice\");","map":{"version":3,"names":["React","Container","Row","Col","jsxDEV","_jsxDEV","Fragment","_Fragment","RecentPractice","getContainerStyle","getItemStyle","imgs","children","className","map","path","index","src","alt","class","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/github/Kingmaker_web/kingmaker_tmp/boot/src/pages/MainPage/component/recent_practice.js"],"sourcesContent":["import React from \"react\";\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport './scroll.css';\r\n\r\nconst RecentPractice =()=>{\r\n\r\n    const getContainerStyle =()=>({\r\n        // overflowX: 'auto',\r\n        // whiteSpace: 'nowrap'\r\n    });\r\n\r\n    const getItemStyle=()=>({\r\n        // display: 'inline-block',\r\n    });\r\n\r\n    const imgs = [\r\n        'img/ppt1.jpg',\r\n        'img/ppt2.png',\r\n        'img/ppt3.png',\r\n        'img/ppt4.jpg',\r\n    ];\r\n\r\n    return(\r\n        <>\r\n        {/* <div class=\" pt-4 px-4 m-0\"> \r\n            <div class=\"bg-light rounded p-4\"> */}\r\n                <Container>\r\n                    <Row className=\"image-container\">\r\n                        {imgs.map((path, index)=>(\r\n                            <Col key={index}>\r\n                                <img src={path} alt={`Image ${index + 1}`} class=\"img-fluid\" />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                </Container>\r\n                {/* <h6 class=\"mb-0\">최근 연습</h6>\r\n                <div class=\"d-flex align-items-center overflow-auto\" style={getContainerStyle()}>\r\n                    {imgs.map((path, index) => (\r\n                        <div key={index} class=\"\" style={getItemStyle()}>\r\n                            <button class='btn btn-link'>\r\n                                <img src={path} class=\"d-block\" alt={`이미지 ${index + 1}`} />\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                </div> */}\r\n            {/* </div>\r\n        </div> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RecentPractice;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAO,iBAAiB;AACnD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtB,MAAMC,cAAc,GAAEA,CAAA,KAAI;EAEtB,MAAMC,iBAAiB,GAAEA,CAAA,MAAK;IAC1B;IACA;EAAA,CACH,CAAC;EAEF,MAAMC,YAAY,GAACA,CAAA,MAAK;IACpB;EAAA,CACH,CAAC;EAEF,MAAMC,IAAI,GAAG,CACT,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,CACjB;EAED,oBACIN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eAGQP,OAAA,CAACJ,SAAS;MAAAW,QAAA,eACNP,OAAA,CAACH,GAAG;QAACW,SAAS,EAAC,iBAAiB;QAAAD,QAAA,EAC3BD,IAAI,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAClBX,OAAA,CAACF,GAAG;UAAAS,QAAA,eACAP,OAAA;YAAKY,GAAG,EAAEF,IAAK;YAACG,GAAG,EAAG,SAAQF,KAAK,GAAG,CAAE,EAAE;YAACG,KAAK,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC,GADzDP,KAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBAalB,CAAC;AAEX,CAAC;AAACC,EAAA,GA7CIhB,cAAc;AA+CpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}