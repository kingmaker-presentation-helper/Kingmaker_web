{"ast":null,"code":"var _jsxFileName = \"C:\\\\Kingmaker_web\\\\kingmaker_tmp\\\\boot\\\\src\\\\pages\\\\MainPage\\\\component\\\\recent_practice.js\";\nimport React, { useEffect, useRef, useState } from \"react\";\n// import './carousel.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RecentPractice = () => {\n  const getContainerStyle = () => ({\n    // overflowX: 'auto',\n    // whiteSpace: 'nowrap'\n  });\n  const getItemStyle = () => ({\n    // display: 'inline-block',\n  });\n  const imgs = ['img/ppt1.jpg', 'img/ppt2.png', 'img/ppt3.png', 'img/ppt4.jpg'];\n\n  // const [item, setItem] = useState([\n  //     {\n  //         id: 1,\n  //         url: 'img/ppt1.jpg'\n  //     },\n  //     {\n  //         id: 2,\n  //         url: 'img/ppt2.png'\n  //     },\n  //     {\n  //         id: 3,\n  //         url: 'img/ppt3.png'\n  //     },\n  //     {\n  //         id: 4,\n  //         url: 'img/ppt4.jpg'\n  //     }\n  // ]);\n\n  // const [currentIndex, setCurrentIndex] = useState(0);\n  // const fakeData = 2;\n  // const setSliders=()=>{\n  //     const addedFront = [];\n  //     const addedLast = [];\n  //     let index = 0;\n  //     while (index < fakeData) {\n  //         addedLast.push(item[index % item.length]);\n  //         addedFront.unshift(item[item.length - 1 - (index % item.length)]);\n  //         index++;\n  //     }\n\n  //     return [...addedFront, ...item, ...addedLast];\n  // };\n\n  // const handlerSlide = index =>{\n  //     if (index < 0) {\n  //         direction.current = 'left';\n  //         index = slides.length - 1;\n  //         setOffTransition(true);\n  //     } else if(index === slides.length - 1) {\n  //         direction.current = 'right';\n  //         index = slides.length - 1;\n  //     }\n  //     setCurrentIndex(index);\n  // }\n\n  // const handleSwipe = direction =>{\n  //     handlerSlide(currentIndex + direction);\n  // };\n\n  // const slides = setSliders();\n  // const [offTransition, setOffTransition] = useState(false);\n  // const direction = useRef('left');\n  // const transition = offTransition ? '0s' : '1s';\n  // const [disabled, setDisabled] = useState(false);\n  // const buttonControll = () =>{\n  //     setDisabled(true);\n  //     setTimeout(()=> setDisabled(false), 1000);\n  // };\n\n  // useEffect(()=> {\n  //     if (\n  //         direction.current === 'right' &&\n  //         currentIndex === slides.length - 1\n  //     ) {\n  //         setTimeout(()=> {\n  //             setOffTransition(true);\n  //             setCurrentIndex(0);\n  //         }, 1000);\n  //     }\n  //     else if (\n  //         direction.current === 'left' &&\n  //         currentIndex === slides.length - 1\n  //     ) {\n  //         setTimeout(()=>{\n  //             setOffTransition(false);\n  //             setCurrentIndex(slides.length-2);\n  //         }, [10]);\n  //     }\n  // }, [currentIndex]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container pt-4 px-4 m-0\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container-fluid bg-light rounded p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          class: \"mb-0\",\n          children: \"\\uCD5C\\uADFC \\uC5F0\\uC2B5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"d-flex overflow-auto\",\n          style: getContainerStyle(),\n          children: imgs.map((path, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"\",\n            style: getItemStyle(),\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              class: \"btn btn-link\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: path,\n                class: \"d-block\",\n                alt: `이미지 ${index + 1}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = RecentPractice;\nexport default RecentPractice;\nvar _c;\n$RefreshReg$(_c, \"RecentPractice\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","RecentPractice","getContainerStyle","getItemStyle","imgs","children","class","fileName","_jsxFileName","lineNumber","columnNumber","style","map","path","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Kingmaker_web/kingmaker_tmp/boot/src/pages/MainPage/component/recent_practice.js"],"sourcesContent":["import React, {useEffect, useRef, useState} from \"react\";\r\n// import './carousel.scss';\r\n\r\nconst RecentPractice =()=>{\r\n\r\n    const getContainerStyle =()=>({\r\n        // overflowX: 'auto',\r\n        // whiteSpace: 'nowrap'\r\n    });\r\n\r\n    const getItemStyle=()=>({\r\n        // display: 'inline-block',\r\n    });\r\n\r\n    const imgs = [\r\n        'img/ppt1.jpg',\r\n        'img/ppt2.png',\r\n        'img/ppt3.png',\r\n        'img/ppt4.jpg',\r\n    ];\r\n\r\n    // const [item, setItem] = useState([\r\n    //     {\r\n    //         id: 1,\r\n    //         url: 'img/ppt1.jpg'\r\n    //     },\r\n    //     {\r\n    //         id: 2,\r\n    //         url: 'img/ppt2.png'\r\n    //     },\r\n    //     {\r\n    //         id: 3,\r\n    //         url: 'img/ppt3.png'\r\n    //     },\r\n    //     {\r\n    //         id: 4,\r\n    //         url: 'img/ppt4.jpg'\r\n    //     }\r\n    // ]);\r\n\r\n    // const [currentIndex, setCurrentIndex] = useState(0);\r\n    // const fakeData = 2;\r\n    // const setSliders=()=>{\r\n    //     const addedFront = [];\r\n    //     const addedLast = [];\r\n    //     let index = 0;\r\n    //     while (index < fakeData) {\r\n    //         addedLast.push(item[index % item.length]);\r\n    //         addedFront.unshift(item[item.length - 1 - (index % item.length)]);\r\n    //         index++;\r\n    //     }\r\n\r\n    //     return [...addedFront, ...item, ...addedLast];\r\n    // };\r\n\r\n    // const handlerSlide = index =>{\r\n    //     if (index < 0) {\r\n    //         direction.current = 'left';\r\n    //         index = slides.length - 1;\r\n    //         setOffTransition(true);\r\n    //     } else if(index === slides.length - 1) {\r\n    //         direction.current = 'right';\r\n    //         index = slides.length - 1;\r\n    //     }\r\n    //     setCurrentIndex(index);\r\n    // }\r\n\r\n    // const handleSwipe = direction =>{\r\n    //     handlerSlide(currentIndex + direction);\r\n    // };\r\n\r\n    // const slides = setSliders();\r\n    // const [offTransition, setOffTransition] = useState(false);\r\n    // const direction = useRef('left');\r\n    // const transition = offTransition ? '0s' : '1s';\r\n    // const [disabled, setDisabled] = useState(false);\r\n    // const buttonControll = () =>{\r\n    //     setDisabled(true);\r\n    //     setTimeout(()=> setDisabled(false), 1000);\r\n    // };\r\n\r\n    // useEffect(()=> {\r\n    //     if (\r\n    //         direction.current === 'right' &&\r\n    //         currentIndex === slides.length - 1\r\n    //     ) {\r\n    //         setTimeout(()=> {\r\n    //             setOffTransition(true);\r\n    //             setCurrentIndex(0);\r\n    //         }, 1000);\r\n    //     }\r\n    //     else if (\r\n    //         direction.current === 'left' &&\r\n    //         currentIndex === slides.length - 1\r\n    //     ) {\r\n    //         setTimeout(()=>{\r\n    //             setOffTransition(false);\r\n    //             setCurrentIndex(slides.length-2);\r\n    //         }, [10]);\r\n    //     }\r\n    // }, [currentIndex]);\r\n\r\n    return(\r\n        <>\r\n        {/* <div class='project'>\r\n            <button\r\n                disabled={disabled}\r\n                onClick={()=>{\r\n                    handleSwipe(-1);\r\n                    buttonControll();\r\n                }}>&lt;\r\n            </button>\r\n            <div className='carousel'>\r\n                <div\r\n                    className='carouselBox'\r\n                    style={{\r\n                        transform: `translateX(${-100 * currentIndex}%)`,\r\n                        transition\r\n                    }}>\r\n                        {slides.map(({url, id}, idx) =>{\r\n                            return (\r\n                                <div\r\n                                    key={idx}\r\n                                    className='carouselItem'\r\n                                    style={{backgroundImage: `url(${url})`}}>\r\n                                        {id}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                </div>\r\n            </div>\r\n            <button\r\n                disabled={disabled}\r\n                onClick={()=>{\r\n                    handleSwipe(1);\r\n                    buttonControll();\r\n                }}>\r\n                    &gt;\r\n                </button>\r\n        </div> */}\r\n        <div class=\"container pt-4 px-4 m-0\">\r\n            <div class=\"container-fluid bg-light rounded p-4\">\r\n                <h6 class=\"mb-0\">최근 연습</h6>\r\n                <div class=\"d-flex overflow-auto\" style={getContainerStyle()}>\r\n                    {imgs.map((path, index) => (\r\n                        <div key={index} class=\"\" style={getItemStyle()}>\r\n                            <button class='btn btn-link'>\r\n                                <img src={path} class=\"d-block\" alt={`이미지 ${index + 1}`} />\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RecentPractice;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AACxD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,cAAc,GAAEA,CAAA,KAAI;EAEtB,MAAMC,iBAAiB,GAAEA,CAAA,MAAK;IAC1B;IACA;EAAA,CACH,CAAC;EAEF,MAAMC,YAAY,GAACA,CAAA,MAAK;IACpB;EAAA,CACH,CAAC;EAEF,MAAMC,IAAI,GAAG,CACT,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,CACjB;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACIN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eAqCAP,OAAA;MAAKQ,KAAK,EAAC,yBAAyB;MAAAD,QAAA,eAChCP,OAAA;QAAKQ,KAAK,EAAC,sCAAsC;QAAAD,QAAA,gBAC7CP,OAAA;UAAIQ,KAAK,EAAC,MAAM;UAAAD,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3BZ,OAAA;UAAKQ,KAAK,EAAC,sBAAsB;UAACK,KAAK,EAAET,iBAAiB,CAAC,CAAE;UAAAG,QAAA,EACxDD,IAAI,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAClBhB,OAAA;YAAiBQ,KAAK,EAAC,EAAE;YAACK,KAAK,EAAER,YAAY,CAAC,CAAE;YAAAE,QAAA,eAC5CP,OAAA;cAAQQ,KAAK,EAAC,cAAc;cAAAD,QAAA,eACxBP,OAAA;gBAAKiB,GAAG,EAAEF,IAAK;gBAACP,KAAK,EAAC,SAAS;gBAACU,GAAG,EAAG,OAAMF,KAAK,GAAG,CAAE;cAAE;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvD;UAAC,GAHHI,KAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIV,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACJ,CAAC;AAEX,CAAC;AAACO,EAAA,GAzJIhB,cAAc;AA2JpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}